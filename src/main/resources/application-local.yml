server:
  #默认访问端口
  port: 8888
  #默认访问路径
  context-path: /basic-platform

#日志配置
logging:
  level:
    com.criller.base: debug
  file: ./logs/base/base.log

#控制台输出
debug: false

#flayway
# MySQL
#flyway.url = jdbc:mysql://localhost:3306/testdb?serverTimezone=UTC&useSSL=true
flyway:
  enabled: true

spring:
  #配置spring batch
  batch:
    table-prefix: job

  #配置数据源
  datasource:
    name: base-mysql
    url: jdbc:mysql://127.0.0.1:3306/base
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver

    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    spring.datasource.filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000




